@page "/"

@inherits SortedTablePage<ReportSummary>

@using BlazorTable
@using PrimeView.Entities
@using PrimeView.Frontend.Sorting 

<div class="row">
	<div class="col">
		<div class="row align-items-center bg-light no-gutter rounded border border-secondary mx-0 mb-3">
			<div class="col-auto pr-0">
				<a href="https://github.com/PlummersSoftwareLLC/Primes"><img src="img/logo.svg" width="30" height="30" alt=""></a>
			</div>
			<div class="col px-0">
				<nav aria-label="breadcrumb">
					<ol class="breadcrumb bg-transparent m-0">
						<li class="breadcrumb-item active" aria-current="page">Reports</li>
					</ol>
				</nav>
			</div>
			<div class="col-auto pl-y">
				<a href="https://github.com/PlummersSoftwareLLC/PrimeView"><i class="text-secondary fas fa-info-circle"></i></a>
			</div>
		</div>

		<div class="d-flex">
			<div><h1>Reports</h1></div>
			<div class="ml-auto"><button class="btn btn-outline-secondary" @onclick="Refresh"><i class="fa fa-refresh" role="button" aria-hidden="true"></i></button></div>
		</div>

		<div class="accordion">
			<div class="card">
				<div class="card-header">
					<h2 class="mb-0">
						<button class="btn btn-block text-primary text-left" @onclick="ToggleFilterPanel">
							<i class="fa @(HideFilters ? "fa-angle-right" : "fa-angle-down")"></i>&nbsp;&nbsp;Filter
						</button>
					</h2>
				</div>

				<div class="collapse@(HideFilters ? "" : ".show")">
					<div class="card-body">

						<div class="row">
							<div class="col-auto">
								<div class="form-group">
									<label for="runners">Runner:</label>
									<select class="form-control" id="runners" @onchange="RunnersSelectionChanged">
										@{
											var filterRunners = FilterRunners;
										}
										@foreach (var runner in this.runners.OrderBy(r => r.Desciption))
										{
											<option value="@runner.Id" selected="@(filterRunners == runner.Id))">@runner.Desciption</option>
										}
									</select>
								</div>
							</div>
						</div>

					</div>
				</div>
			</div>
		</div>

		<form class="form-inline mt-4 mb-2" @onsubmit="ApplyNewReportCount">
			<label>Reports per page:&nbsp;</label>
			@foreach(int reportNumber in new int[] {25, 50, 100}) 
			{
				int loopNumber = reportNumber;

				<button type="button" class="btn @(ReportCount == loopNumber ? "btn-primary" : "btn-outline-primary")" disabled="@(ReportCount == loopNumber)" @onclick="() => ApplyNewReportCount(loopNumber)">@loopNumber</button>
			}
			<input type="number" class="form-control mx-2" @bind="this.newReportCount" @bind:event="oninput">
			<button type="submit" class="btn btn-primary" disabled="@(this.newReportCount <= 0 || this.newReportCount == ReportCount)">Apply</button>
			<button type="button" class="btn btn-outline-primary" disabled="@(this.newReportCount == ReportCount)" @onclick="() => this.newReportCount = ReportCount">Reset</button>
		</form>

		@if (this.pageCount > 1)
		{
			// We include 5 pages around and including the current page. We put the current page in the middle, except if we're at one end of the range of pages 
			int pageIndexStart = this.pageNumber - 2;
			int pageIndexEnd = this.pageNumber + 2;

			if (pageIndexStart < 1)
			{
				pageIndexStart = 1;
				pageIndexEnd = Math.Min(this.pageCount, 5);
			}
			else if (pageIndexEnd > this.pageCount)
			{
				pageIndexStart = Math.Max(pageCount - 4, 1);
				pageIndexEnd = this.pageCount;
			}

			<nav aria-label="Report pagination">
				<ul class="pagination justify-content-end">
					<li class="page-item @(this.pageNumber == 1 ? "disabled" : "")" aria-label="Previous">
						<a role="button" class="page-link" @onclick="() => ApplyPageNumber(this.pageNumber - 1)">
							<span aria-hidden="true">&laquo;</span>
						</a>
					</li>

					@if (pageIndexStart > 1)
					// Always include first page
					{
						<li class="page-item"><a role="button" class="page-link" @onclick="() => ApplyPageNumber(1)">1</a></li>
					}
					
					
					@if (pageIndexStart == 3)
					// Insert second page if we're between pages 1 and 3
					{
						<li class="page-item"><a role="button" class="page-link" @onclick="() => ApplyPageNumber(2)">2</a></li>
					}
					else if (pageIndexStart > 3)
					// Otherwise, insert ellipsis if there is a bigger gap
					{
						<li class="page-item disabled"><a class="page-link">&hellip;</a></li>
					}

					@for (int pageIndex = pageIndexStart; pageIndex <= pageIndexEnd; pageIndex++)
					// Add pages surrounding current page
					{
						int loopIndex = pageIndex;

						<li class="page-item @(this.pageNumber == loopIndex ? "active" : "")"><a role="button" class="page-link" @onclick="() => ApplyPageNumber(loopIndex)">@loopIndex</a></li>						
					}

					@if (pageIndexEnd == this.pageCount - 2)
					// Insert second-to-last page if we're between the third-to-last and last pages
					{
						<li class="page-item"><a role="button" class="page-link" @onclick="() => ApplyPageNumber(this.pageCount - 1)">@(this.pageCount - 1)</a></li>
					}
					else if (pageIndexEnd < this.pageCount - 2)
					// Otherwise, insert ellipsis if there is a bigger gap
					{
						<li class="page-item disabled"><a class="page-link">&hellip;</a></li>
					}

					@if (pageIndexEnd < this.pageCount)
					// Always include last page
					{
						<li class="page-item"><a role="button" class="page-link" @onclick="() => ApplyPageNumber(this.pageCount)">@this.pageCount</a></li>
					}

					<li class="page-item @(this.pageNumber == this.pageCount ? "disabled" : "")">
						<a role="button" class="page-link" @onclick="() => ApplyPageNumber(this.pageNumber + 1)" aria-label="Next">
							<span aria-hidden="true">&raquo;</span>
						</a>
					</li>
				</ul>
			</nav>
		}

		<Table TableItem="ReportSummary" Items="this.summaries" @ref="this.sortedTable" PageSize="0" ColumnReorder="false" @onclick="FlagTableSortingChange">
			@{ OnTableRefreshStart(); }
			<Column TableItem="ReportSummary" Title="Date" Field="@(s => s.Date)" Sortable="true" Filterable="true">
				<Template>
					<button class="btn btn-link py-0" @onclick="() => LoadReport(context.Id)">@context.Date?.ToLocalTime()</button>
				</Template>
			</Column>
			<Column TableItem="ReportSummary" Title="User" Field="@(s => s.User)" Sortable="true" Filterable="true" Class="align-middle">
				<CustomIFilters>
					<CustomSelect TableItem="ReportSummary">
						@foreach (var user in this.summaries.Select(r => r.User).Where(u => u != null).Distinct().OrderBy(u => u))
						{
							<CustomSelectOption Key="@user" Value="@user" />
						}
					</CustomSelect>
				</CustomIFilters>
			</Column>
			<Column TableItem="ReportSummary" Title="CPU Vendor" Field="@(s => s.CpuVendor)" Sortable="true" Filterable="true" Class="align-middle" />
			<Column TableItem="ReportSummary" Title="CPU Brand" Field="@(s => s.CpuBrand)" Sortable="true" Filterable="true" Class="align-middle" />
			<Column TableItem="ReportSummary" Title="# Cores" Field="@(s => s.CpuCores)" Sortable="true" Filterable="true" Align="Align.Right" Class="align-middle" />
			<Column TableItem="ReportSummary" Title="Distro" Field="@(s => s.OsDistro)" Sortable="true" Filterable="true" Class="align-middle" />
			<Column TableItem="ReportSummary" Title="OS Release" Field="@(s => s.OsRelease)" Sortable="true" Filterable="true" Class="align-middle" />
			<Column TableItem="ReportSummary" Title="Architecture" Field="@(s => s.Architecture)" Sortable="true" Filterable="true" Class="align-middle" />
			<Column TableItem="ReportSummary" Title="Virtual" Field="@(s => s.IsSystemVirtual)" Sortable="true" Filterable="true" Class="align-middle">
				<CustomIFilters>
					<CustomSelect TableItem="ReportSummary">
						<CustomSelectOption Key="yes" Value="@("True")" />
						<CustomSelectOption Key="no" Value="@("False")" />
					</CustomSelect>
				</CustomIFilters>
				<Template>
					@(context.IsSystemVirtual == true ? "yes" : "no")
				</Template>
			</Column>
			<Column TableItem="ReportSummary" Title="# Results" Field="@(s => s.ResultCount)" Sortable="true" Filterable="true">
				<Template>
					<button class="btn btn-link py-0" @onclick="() => LoadReport(context.Id)">@context.ResultCount</button>
				</Template>
			</Column>
		</Table>
	</div>
</div>
