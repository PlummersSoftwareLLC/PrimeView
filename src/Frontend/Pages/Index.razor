@page "/"

@inherits SortedTablePage<ReportSummary>

@using BlazorTable
@using PrimeView.Entities
@using PrimeView.Frontend.Sorting 

@inject IReportReader ReportReader

<div class="row">
	<div class="col">
		<nav aria-label="breadcrumb">
			<ol class="breadcrumb">
				<li class="breadcrumb-item active" aria-current="page">Reports</li>
			</ol>
		</nav>
		<h1>Reports</h1>

		<Table TableItem="ReportSummary" Items="summaries" @ref="sortedTable" PageSize="100" ColumnReorder="false" @onclick="FlagTableSortingChange">
			@{ OnTableRefreshStart(); }
			<Column TableItem="ReportSummary" Title="Date" Field="@(s => s.Date)" Sortable="true" Filterable="true">
				<Template>
					<button class="btn btn-link py-0" @onclick="() => LoadReport(context.Id)">@context.Date?.ToLocalTime()</button>
				</Template>
			</Column>
			<Column TableItem="ReportSummary" Title="User" Field="@(s => s.User)" Sortable="true" Filterable="true" Class="align-middle">
				<CustomIFilters>
					<CustomSelect TableItem="ReportSummary">
						@foreach (var user in summaries.Select(r => r.User).Where(u => u != null).Distinct().OrderBy(u => u))
						{
							<CustomSelectOption Key="@user" Value="@user" />
						}
					</CustomSelect>
				</CustomIFilters>
			</Column>
			<Column TableItem="ReportSummary" Title="CPU Vendor" Field="@(s => s.CpuVendor)" Sortable="true" Filterable="true" Class="align-middle" />
			<Column TableItem="ReportSummary" Title="CPU Brand" Field="@(s => s.CpuBrand)" Sortable="true" Filterable="true" Class="align-middle" />
			<Column TableItem="ReportSummary" Title="# Processors" Field="@(s => s.CpuProcessors)" Sortable="true" Filterable="true" Align="Align.Right" Class="align-middle" />
			<Column TableItem="ReportSummary" Title="# Cores" Field="@(s => s.CpuCores)" Sortable="true" Filterable="true" Align="Align.Right" Class="align-middle" />
			<Column TableItem="ReportSummary" Title="Platform" Field="@(s => s.OsPlatform)" Sortable="true" Filterable="true" Class="align-middle" />
			<Column TableItem="ReportSummary" Title="OS Release" Field="@(s => s.OsRelease)" Sortable="true" Filterable="true" Class="align-middle" />
			<Column TableItem="ReportSummary" Title="Architecture" Field="@(s => s.Architecture)" Sortable="true" Filterable="true" Class="align-middle" />
			<Column TableItem="ReportSummary" Title="Virtual" Field="@(s => s.IsSystemVirtual)" Sortable="true" Filterable="true" Class="align-middle">
				<CustomIFilters>
					<CustomSelect TableItem="ReportSummary">
						<CustomSelectOption Key="yes" Value="@("True")" />
						<CustomSelectOption Key="no" Value="@("False")" />
					</CustomSelect>
				</CustomIFilters>
				<Template>
					@(context.IsSystemVirtual == true ? "yes" : "no")
				</Template>
			</Column>
			<Column TableItem="ReportSummary" Title="# Results" Field="@(s => s.ResultCount)" Sortable="true" Filterable="true">
				<Template>
					<button class="btn btn-link py-0" @onclick="() => LoadReport(context.Id)">@context.ResultCount</button>
				</Template>
			</Column>
			<Pager ShowPageNumber="true" ShowTotalCount="true" ShowPageSizes="true" AlwaysShow="true"/>
		</Table>
	</div>
</div>

@code
{
	private ReportSummary[] summaries = null;

	public override Task SetParametersAsync(ParameterView parameters)
	{
		SortColumn = "dt";
		SortDescending = true;

		return base.SetParametersAsync(parameters);
	}

	protected override async Task OnInitializedAsync()
	{
		summaries = await ReportReader.GetSummaries();
	}

	private void LoadReport(string reportId)
	{
		NavigationManager.NavigateTo($"report?id={reportId}");
	}
}