@page "/report"

@inherits SortedTablePage<Result>

@using BlazorTable
@using PrimeView.Entities
@using PrimeView.Frontend.Tools
@using PrimeView.Frontend.Filters
@using PrimeView.Frontend.Sorting

<div class="row h-100">
	<div class="col">
		<div class="row align-items-center bg-light no-gutter rounded border border-secondary mx-0 mb-3">
			<div class="col-auto pr-0">
				<a href="https://github.com/PlummersSoftwareLLC/Primes"><img src="img/logo.svg" width="30" height="30" alt=""></a>
			</div>
			<div class="col px-0">
				<nav aria-label="breadcrumb">
					<ol class="breadcrumb bg-transparent m-0">
						<li class="breadcrumb-item"><a href="">Reports</a></li>
						<li class="breadcrumb-item active" aria-current="page">@ReportTitle</li>
					</ol>
				</nav>
			</div>
			<div class="col-auto pl-y">
				<a href="https://github.com/PlummersSoftwareLLC/PrimeView"><i class="text-secondary fas fa-info-circle"></i></a>
			</div>
		</div>

		<h1>@ReportTitle</h1>

		@if (this.report == null)
		{
			<div class="row">
				<div class="col-auto text-success">
					<div class="spinner-border"></div>
				</div>
				<div class="col text-left">
					Loading...
				</div>
			</div>
		}
		else
		{
			<div class="accordion">
				<div class="card">
					<div class="card-header">
						<h2 class="mb-0">
							<button class="btn btn-block text-primary text-left" @onclick="ToggleSystemInfoPanel">
								<i class="fa @(HideSystemInformation ? "fa-angle-right" : "fa-angle-down")"></i>&nbsp;&nbsp;System Information
							</button>
						</h2>
					</div>

					<div class="collapse@(HideSystemInformation ? "" : ".show")">
						<SystemInformation Report="this.report" />
					</div>
				</div>

				@{
					string filterSummary = string.Empty;

					if (HideFilters)
					{
						filterSummary = $": {this.CreateSummary(this)}";
						if (OnlyHighestPassesPerSecondPerThreadPerLanguage)
							filterSummary += ", only show highest passes/s/t";
					}
				}
				<div class="card">
					<div class="card-header">
						<h2 class="mb-0">
							<button class="btn btn-block text-primary text-left" @onclick="ToggleFilterPanel">
								<i class="fa @(HideFilters ? "fa-angle-right" : "fa-angle-down")"></i>&nbsp;&nbsp;Filter@(filterSummary)
							</button>
						</h2>
					</div>

					<div class="collapse@(HideFilters ? "" : ".show")">
						<div class="row mx-2 mt-3">
							<div class="col-auto">
								<div class="form-group">
									<label for="implementatios">Languages:</label>
									<select multiple class="form-control" id="implementations" @ref="implementationsSelect" @onchange="ImplementationSelectionChanged">
										@{ var filterImplementations = FilterImplementations; }
										@foreach (var languageInfo in this.report.Results.Select(r => GetLanguageInfo(r.Implementation)).Distinct(new LanguageInfo.KeyEqualityComparer()).OrderBy(n => n.Name))
										{
											<option value="@languageInfo.Key" selected="@(filterImplementations.Contains(languageInfo.Key))">@languageInfo.Name</option>
										}
									</select>
								</div>
							</div>

							<div class="col-auto form-group">
								<label>Parallelism:</label>
								<div class="form-check">
									<input class="form-check-input" type="checkbox" id="fp_st" @bind="FilterParallelSinglethreaded">
									<label class="form-check-label" for="fp_st">
										Single-threaded
									</label>
								</div>
								<div class="form-check">
									<input class="form-check-input" type="checkbox" id="fp-mt" @bind="FilterParallelMultithreaded">
									<label class="form-check-label" for="fp_mt">
										Multithreaded
									</label>
								</div>
							</div>

							<div class="col-auto form-group">
								<label>Algorithm:</label>
								<div class="form-check">
									<input class="form-check-input" type="checkbox" id="fa_ba" @bind="FilterAlgorithmBase">
									<label class="form-check-label" for="fa_ba">
										base
									</label>
								</div>
								<div class="form-check">
									<input class="form-check-input" type="checkbox" id="fa_wh" @bind="FilterAlgorithmWheel">
									<label class="form-check-label" for="fa_wh">
										wheel
									</label>
								</div>
								<div class="form-check">
									<input class="form-check-input" type="checkbox" id="fa_ot" @bind="FilterAlgorithmOther">
									<label class="form-check-label" for="fa_ot">
										&lt;other&gt;
									</label>
								</div>
							</div>

							<div class="col-auto form-group">
								<label>Faithful:</label>
								<div class="form-check">
									<input class="form-check-input" type="checkbox" id="ff_ff" @bind="FilterFaithful">
									<label class="form-check-label" for="ff_ff">
										yes
									</label>
								</div>
								<div class="form-check">
									<input class="form-check-input" type="checkbox" id="ff_uf" @bind="FilterUnfaithful">
									<label class="form-check-label" for="ff_uf">
										no
									</label>
								</div>
							</div>

							<div class="col-auto form-group">
								<label>Bits per prime:</label>
								<div class="form-check">
									<input class="form-check-input" type="checkbox" id="fb_on" @bind="FilterBitsOne">
									<label class="form-check-label" for="fb_on">
										1
									</label>
								</div>
								<div class="form-check">
									<input class="form-check-input" type="checkbox" id="fb_ot" @bind="FilterBitsOther">
									<label class="form-check-label" for="fb_ot">
										&gt;1
									</label>
								</div>
								<div class="form-check">
									<input class="form-check-input" type="checkbox" id="fb_uk" @bind="FilterBitsUnknown">
									<label class="form-check-label" for="fb_uk">
										<em>Unknown</em>
									</label>
								</div>
							</div>
						</div>
						<div class="row mx-2 mb-3">
							<div class="col-auto">
								<button class="btn btn-primary" disabled="@AreFiltersClear" @onclick="ClearFilters">Clear filter</button>
							</div>
						</div>
						<div class="row mx-2 mb-3">
							<div class="col">
								<div class="form-check">
									<input class="form-check-input" type="checkbox" id="bl" @bind="OnlyHighestPassesPerSecondPerThreadPerLanguage">
									<label class="form-check-label" for="bl">
										For each language, only show the result with the highest passes per second, per thread
									</label>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>

			<div class="card">
				<div class="card-header">
					<h2 class="mb-0">
						<button class="btn btn-block text-primary text-left" @onclick="ToggleFilterPresetPanel">
							<i class="fa @(HideFilterPresets ? "fa-angle-right" : "fa-angle-down")"></i>&nbsp;&nbsp;Filter presets
						</button>
					</h2>
				</div>

				<div class="collapse@(HideFilterPresets ? "" : ".show")">
					<div class="row">
						<div class="col">
							<div class="list-group list-group-flush">
								@for (int i = 0; i < (this.filterPresets?.Count ?? 0); i++)
								{
									int presetIndex = i;
									var preset = this.filterPresets[presetIndex];

									<div class="list-group-item py-1 pl-2 pr-0 d-flex justify-content-between align-items-center">
										<button class="btn btn-link @(preset.IsFixed ? "text-dark" : (string.Equals(preset.Name, filterPresetName?.Trim(), StringComparison.OrdinalIgnoreCase)) ? "text-success" : "text-primary") px-1 text-left " @onclick="async () => await ApplyFilterPreset(presetIndex)">
											@preset.Name <span class="font-italic text-secondary">(@preset.CreateSummary(this))</span>
										</button>
										<button class="btn btn-danger" style="box-shadow: none" disabled="@(preset.IsFixed)" @onclick="() => RemoveFilterPreset(presetIndex)">
											<i class="fas fa-minus"></i>
										</button>
									</div>
								}
								<form @onsubmit="AddFilterPreset" class="list-group-item p-0 d-flex justify-content-between align-items-center">
									<input type="text" class="form-control" placeholder="New preset name" @bind="filterPresetName" @bind:event="oninput">
									<button type="submit" class="btn btn-success" disabled=@(!IsFilterPresetNameValid(filterPresetName))>
										<i class="fas fa-plus"></i>
									</button>
								</form>
							</div>
						</div>
					</div>
				</div>
			</div>

			<br />

			var filteredItems = this.report.Results.ApplyFilters(this);
			<Table TableItem="Result" Items="filteredItems" PageSize="0" ColumnReorder="false" ShowFooter="true" @ref="sortedTable" @onclick="FlagTableSortingChange">
				@{ OnTableRefreshStart(); }
				<Column TableItem="Result" Title="#" Sortable="false" Filterable="false" SetFooterValue="@($"{filteredItems.Count()}")" Align="Align.Right">
					<Template>
						@(++rowNumber)
					</Template>
				</Column>
				<Column TableItem="Result" Title="Language" Field="@(r => r.Implementation)" Sortable="true" Filterable="true" SetFooterValue="@($"{filteredItems.Select(r => r.Implementation).Distinct().Count()} languages")">
					<CustomIFilters>
						<CustomSelect TableItem="Result">
							@foreach (var languageInfo in this.report.Results.Select(r => GetLanguageInfo(r.Implementation)).Distinct(new LanguageInfo.KeyEqualityComparer()).OrderBy(n => n.Name))
							{
								<CustomSelectOption Key="@languageInfo.Name" Value="@languageInfo.Key" />
							}
						</CustomSelect>
					</CustomIFilters>
					<Template>
						@{var languageInfo = GetLanguageInfo(context.Implementation);}

						@if (languageInfo.URL != null)
						{
							<a href="@languageInfo.URL" target="_blank" rel="noreferrer noopener">@languageInfo.Name</a>
						}
						else
						{
							@languageInfo.Name
						}
					</Template>
				</Column>
				<Column TableItem="Result" Title="Solution" Field="@(r => r.Solution)" Sortable="false" Filterable="false" Align="Align.Right">
					<Template>
						@if (solutionUrlTemplate != null)
						{
							var languageInfo = GetLanguageInfo(context.Implementation);

							var solutionUrl = this.solutionUrlTemplate
								.Replace("{sln}", context.Solution)
								.Replace("{tag}", languageInfo.Tag ?? languageInfo.Name);

							<a href="@solutionUrl" target="_blank" rel="noreferrer noopener">&nbsp;@context.Solution&nbsp;</a>
						}
						else
						{
							<span>&nbsp;@context.Solution&nbsp;</span>
						}
					</Template>
				</Column>
				<Column TableItem="Result" Title="Label" Field="@(r => r.Label)" Sortable="true" Filterable="true" />
				<Column TableItem="Result" Title="Passes" Field="@(r => r.Passes)" Sortable="true" Filterable="true" Align="Align.Right" />
				<Column TableItem="Result" Title="Duration" Field="@(r => r.Duration)" Sortable="true" Filterable="true" />
				<Column TableItem="Result" Title="# Threads" Field="@(r => r.Threads)" Sortable="true" Filterable="true" SetFooterValue="@($"{filteredItems.Count(r => !r.IsMultiThreaded)} single-threaded")" Align="Align.Right" />
				<Column TableItem="Result" Title="Passes/s/t" Field="@(r => r.PassesPerSecond)" Sortable="true" Filterable="true" />
				<Column TableItem="Result" Title="Multithreaded" Field="@(r => r.IsMultiThreaded)" Sortable="true" Filterable="true" SetFooterValue="@($"{filteredItems.Count(r => r.IsMultiThreaded)} multithreaded")" Align="Align.Center">
					<CustomIFilters>
						<CustomSelect TableItem="Result">
							<CustomSelectOption Key="yes" Value="@("True")" />
							<CustomSelectOption Key="no" Value="@("False")" />
						</CustomSelect>
					</CustomIFilters>
					<Template>
						<span class="text-success">@(context.IsMultiThreaded ? "yes" : "no")</span>
					</Template>
				</Column>
				<Column TableItem="Result" Title="Algorithm" Field="@(r => r.Algorithm)" Sortable="true" Filterable="true" SetFooterValue="@($"{filteredItems.Count(r => r.Algorithm == "base")} base")" Align="Align.Center">
					<CustomIFilters>
						<CustomSelect TableItem="Result">
							@foreach (var algorithm in this.report.Results.Select(r => r.Algorithm).Where(a => a != null).Distinct().OrderBy(a => a))
							{
								<CustomSelectOption Key="@algorithm" Value="@algorithm" />
							}
						</CustomSelect>
					</CustomIFilters>
					<Template>
						@if (context.Algorithm == "base")
						{
							<span class="text-success">@context.Algorithm</span>
						}
						else
						{
							@context.Algorithm
						}
					</Template>
				</Column>
				<Column TableItem="Result" Title="Faithful" Field="@(r => r.IsFaithful)" Sortable="true" Filterable="true" SetFooterValue="@($"{filteredItems.Count(r => r.IsFaithful == true)} faithful")" Align="Align.Center">
					<CustomIFilters>
						<CustomSelect TableItem="Result">
							<CustomSelectOption Key="yes" Value="@("True")" />
							<CustomSelectOption Key="no" Value="@("False")" />
						</CustomSelect>
					</CustomIFilters>
					<Template>
						@if (context.IsFaithful == true)
						{
							<span class="text-success">yes</span>
						}
						else
						{
							<span>no</span>
						}
					</Template>
				</Column>
				<Column TableItem="Result" Title="Bits" Field="@(r => r.Bits)" Sortable="true" Filterable="true" SetFooterValue="@($"{filteredItems.Count(r => r.Bits == 1)} single-bit")" Align="Align.Right">
					<CustomIFilters>
						<CustomSelect TableItem="Result">
							@foreach (var bitCount in this.report.Results.Select(r => r.Bits).Where(b => b != null).Cast<int>().Distinct().OrderBy(b => b))
							{
								<CustomSelectOption Key="@bitCount.ToString()" Value="@bitCount" />
							}
						</CustomSelect>
					</CustomIFilters>
					<Template>
						@if (context.Bits == 1)
						{
							<span class="text-success">@context.Bits</span>
						}
						else if (context.Bits == null)
						{
							<em>Unknown</em>
						}
						else
						{
							@context.Bits
						}
					</Template>
				</Column>
			</Table>
		}
	</div>
</div>
